# Docker Compose Yaml 
version: "2.4"
services:
    mqtt:
        image: eclipse-mosquitto:1.5.5
        hostname: mosquitto
        container_name: my-mqtt-container
        restart: always
        ports:
            - 1883:1883
            - 9011:9001
        networks: 
            - webnet
        volumes:
        - /Volumes/docker/docker/mosquitto/config:/mosquitto/config
        - /Volumes/docker/docker/mosquitto/log:/mosquitto/log
        - /Volumes/docker/docker/mosquitto/data:/mosquitto/data/

    web:
        image: nginx:1.15
        container_name: my-nginx-container
        restart: always
        volumes:
            - /Volumes/docker/docker/nginx/www:/usr/share/nginx/html
            - /Volumes/docker/docker/nginx/log:/var/log/nginx
        ports:
            - 80:80
            - 443:443
        networks:
            - webnet

    node-red:
        build: ./images/node-red
        image: node-red
        container_name: my-node-red
        restart: always
        ports:
            - 1880:1880
        volumes:
            - /Volumes/docker/docker/node-red-data:/data

    influxdb:
        build: ./images/influxdb
        image: influxdb
        container_name: influxdb
        env_file: configuration.env
        restart: always
        ports:
            - 8086:8086
            - 8082:8082
        networks:
            - influxdb
        volumes:
            - /Volumes/docker/docker/influxdb/data:/var/lib/influxdb

    chronograf:
        image: chronograf
        container_name: chronograf
        restart: always
        entrypoint: 'chronograf --influxdb-url=http://influxdb:8086'
        ports:
            - 8888:8888
        networks:
            - influxdb
        depends_on:
            - influxdb
        volumes:
            - /Volumes/docker/docker/chronograf/data:/var/lib/chronograf/
    
    grafana:
        build: ./images/grafana
        image: grafana
        container_name: grafana
        env_file: configuration.env
        restart: always
        depends_on:
            - influxdb
        networks:
            - influxdb
        ports:
            - 3000:3000
        volumes:
            - /Volumes/docker/docker/grafana/data:/var/lib/grafana
            - /Volumes/docker/docker/grafana/log:/var/log/grafana

    mongodb:
        container_name: mongo
        image: mongo:3
        networks:
            - lognet
        volumes:
            - /Volumes/docker/docker/mongo/data:/data/db  

    elasticsearch:
        container_name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:6.8.5
        mem_limit: 4g       # Will only run when version is set to 2.x
        restart: always 
        networks:
            - lognet
        volumes:    
            - /Volumes/docker/docker/elasticsearch/data:/usr/share/elasticsearch/data
        env_file:
            - ./elasticsearch.env    
        # environment:
        #     - http.host=0.0.0.0
        #     - transport.host=localhost
        #     - network.host=0.0.0.0
        #     - xpack.security.enabled=false
        #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports: 
            - 9200:9200     

    graylog:
        container_name: graylog
        image: graylog/graylog:3.3
        volumes:
            - /Volumes/docker/docker/graylog/journal:/usr/share/graylog/data/journal   
            - ./graylog/service-names-port-numbers.csv:/etc/graylog/server/service-names-port-numbers.csv
        env_file:
            - ./graylog.env
        # environment:
        #     # CHANGE ME!
        #     #- GRAYLOG_PASSWORD_SECRET=somepasswordpepper
        #     # Password: admin
        #     #- GRAYLOG_ROOT_PASSWORD_SHA2=d07cf09e0d9b56c755e2cc97147c8fc63bfd98ea08fac925d40587c5880222f7
        #     #- GRAYLOG_WEB_ENDPOINT_URI=http://127.0.0.1:9000/api
        #     - GRAYLOG_ROOT_TIMEZONE=Europe/Amsterdam
        #     - GRAYLOG_HTTP_EXTERNAL_URI=http://192.168.178.44:9002/
        links:
            - mongodb:mongo
            - elasticsearch
        depends_on:
            - mongodb
            - elasticsearch
        networks:
            - lognet
        ports:
            # Graylog web interface and REST API
            - 9002:9000
            # Netflow
            - 2055:2055/udp
            # Syslog Feed
            - 5442:5442/udp
            # Syslog TCP
            - 1514:1514
            # Syslog UDP
            - 1514:1514/udp
            # Syslog TCP
            - 5140:5140
            # Syslog UDP
            - 5140:5140/udp
            # Syslog TCP
            - 5141:5141
            # Syslog UDP
            - 5141:5141/udp
            # GELF TCP
            - 12201:12201
            # GELF UDP
            - 12201:12201/udp

    # Kibana : https://www.elastic.co/guide/en/kibana/6.8/index.html
    kibana:
        image: docker.elastic.co/kibana/kibana-oss:6.8.5
        env_file:
            - kibana.env
        depends_on:
            - elasticsearch
        ports:
            - 5601:5601
    cerebro:
        image: lmenezes/cerebro:0.9.0
        ports:
            - 9001:9000
        links:
            - elasticsearch
        depends_on:
            - elasticsearch
        logging:
            driver: "json-file"
            options:
                max-size: "100M"


networks:
    webnet: {}
    lognet: {}
    influxdb: {}

